<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcy.dao.BookDao">

    <!-- 按书名查询全部信息 -->
    <select id="queryBookByName" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where book.name like '%${name}%'
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <!-- 按作者查询全部信息 -->
    <select id="queryBookByAuthor" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where author like '%${author}%'
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <!-- 按出版社查询全部信息 -->
    <select id="queryBookByPress" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where press like '%${press}%'
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <!-- 按价格范围查询全部信息 -->
    <select id="queryBookByPrice" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where price between #{priceMin} and #{priceMax}
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <select id="queryBookBySort1" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where book.sort1 like '%${sort1}%'
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <select id="queryBookBySort2" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where book.sort2 like '%${sort2}%'
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <select id="queryBookBySort3" resultType="Book">
        select book.id,
        book.businessId,
        business.name as "businessName",
        book.number,
        book.count,
        book.name,
        book.author,
        book.press,
        book.impression,
        book.synopsis,
        book.price,
        book.ext
        from book,business
        where book.sort3 like '%${sort3}%'
        and book.businessId=business.id
        and book.count > 0
        and business.state = '营业中'
    </select>

    <select id="businessQueryBook" resultType="Book">
        select * from book where businessId = #{businessId}
    </select>

    <update id="sendGoods">
        update book set book.count = (book.count - 1) where id = #{id}
    </update>

    <delete id="deleteBook">
        delete from book where id = #{id}
    </delete>

    <update id="editPrice">
        update book set price = #{price} where id = #{id}
    </update>
</mapper>
